// Experiment with moving pens randomly, and with flocking tendancies to those that come beforepackage{		import com.davidbliss.eb.Canvas;		import flash.display.Sprite;	import flash.display.Stage;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.events.KeyboardEvent;		public class WanderingLines extends Sprite	{		private var canvas:Canvas;		private var circles:Array;		private var maxX:Number;		private var maxY:Number;		private var wanderX:Number;		private var wanderY:Number;		public function WanderingLines()		{				stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.NO_SCALE;						// draw square to test stage 			var sq:Sprite = new Sprite();			sq.graphics.beginFill( 0xdddddd , 1 );			sq.graphics.drawRect(0,0,stage.stageWidth, stage.stageHeight);			addChild(sq);						// create canvas			canvas = new Canvas(true);			canvas.x=canvas.y=5;			addChild(canvas);						maxY= 600;						stage.addEventListener(KeyboardEvent.KEY_DOWN, checkKeystroke);		}				private function wander():void{						wanderY = Math.round(Math.random()*maxY);			wanderX = Math.round(Math.random()*2000);			maxX= wanderX+2000+Math.round((Math.random()*1000));						canvas.penUp(true);			canvas.movePen(wanderX, wanderY);			canvas.penUp(false);						var maxVelX:Number= 15;			var maxVelY:Number= 5;			var minVelX:Number= 3;			var minVelY:Number= -5;			var velX:Number= Math.round(Math.random()*(maxVelX-minVelX)+minVelX);			var velY:Number= Math.round(Math.random()*(maxVelY-maxVelY)+maxVelY);						var maxAccelX:Number= 0;			var maxAccelY:Number= 0;			var accelX:Number= .4//Math.round(Math.random()*maxAccelX)+1;			var accelY:Number= .4//Math.round(Math.random()*maxAccelY)+1;						var directionAccelX:Number			var directionAccelY:Number			if (Math.random()<.5) {				directionAccelX = 1;			}else {				directionAccelX = -1;			}			if (Math.random()<.5) {				directionAccelY = 1;			}else {				directionAccelY = -1;			}			var probChangeDirectionAccelX:Number= 0;			var probChangeDirectionAccelY:Number= 0;						var probIncrement:Number=.01;						while (wanderX<maxX){								velX+=(accelX*directionAccelX);				if (Math.random()<probChangeDirectionAccelX) {					directionAccelX*=-1;					probChangeDirectionAccelX = 0;				} else {					probChangeDirectionAccelX += probIncrement;				}				velX=Math.min(velX, maxVelX);				velX=Math.max(velX, minVelX);												if (wanderY>maxY-100 && directionAccelY==1) {					probChangeDirectionAccelY+=.5;					trace("y too high, probChangeDirectionAccelY:"+probChangeDirectionAccelY);					if (Math.random()<probChangeDirectionAccelY) {						directionAccelY=-1;						probChangeDirectionAccelY = 0;					}				} else if (wanderY<100 && directionAccelY==-1) {					trace("y too low");					probChangeDirectionAccelY+=.5;					if (Math.random()<probChangeDirectionAccelY) {						directionAccelY=1;						probChangeDirectionAccelY = 0;					}				} else if (Math.random()<probChangeDirectionAccelY) {					trace("y normal");					directionAccelY*=-1;					probChangeDirectionAccelY = 0;				} else {					trace("blah")					probChangeDirectionAccelY += probIncrement;				}												velY+=(accelY*directionAccelY);								velY=Math.min(velY, maxVelY);				velY=Math.max(velY, minVelY);								trace("Y:"+wanderY+" velY:"+velY+" accelY:"+accelY+" directionAccelY:"+directionAccelY);				wanderY+=Math.round(velY);				wanderX+=Math.round(velX);				trace("moving to x:"+wanderX+" y:"+wanderY);				canvas.movePen(wanderX, wanderY);			}						canvas.penUp(true);		}				private function checkKeystroke(event:KeyboardEvent):void{			var i:Number = event.charCode-48			trace(i);			wander();			// TODO: Just use spacebar to start and stop for color changes		}	}}